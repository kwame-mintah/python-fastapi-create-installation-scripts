trigger:
- master

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  # Python version: 3.8
  pythonVersion: '3.8'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      name: $(projectPoolName)
      vmImage: $(vmImageName)
    steps:
    - script: |
        apt-get install python$(pythonVersion)-venv -y --allow-change-held-packages
        apt-get install python3-pip --allow-downgrades -y --allow-change-held-packages
      workingDirectory: $(projectRoot)
      displayName: "Install pip and venv"

    - script: |
        python$(pythonVersion) -m venv antenv
        source antenv/bin/activate
        python$(pythonVersion) -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - script: |
        source antenv/bin/activate
        pytest tests/ -v
      workingDirectory: $(projectRoot)
      displayName: "Run unit tests"

    - script: |
        apt-get install zip -y --allow-change-held-packages
      workingDirectory: $(projectRoot)
      displayName: "Install zip archive task"
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: fastapi

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      name: $(projectPoolName)
      vmImage: $(vmImageName)
    environment: Develop Environment
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : $(webAppName)'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              startUpCommand: $(pythonStartUpCommand)
              package: $(Pipeline.Workspace)/fastapi/$(Build.BuildId).zip
